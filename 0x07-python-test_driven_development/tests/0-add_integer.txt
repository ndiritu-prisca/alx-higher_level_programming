================================
0-add_integer.py module library
================================

This library has a function ''add_integer()''.

Operation
=========

''add_integer(a, b=98)'' takes in 2 arguments. The numbers can be integers
or floats. For the float vaues they are converted into integers. The sum of
the integers is then returned by the function.

Error handling
==============
If a or b are not integers or floats, an TypeError is raised with the
exception message a must be an integer or b must be an integer

Import module
=============
    >>> add_integer = __import__('0-add_integer').add_integer

positive int, positive int:
    >>> add_integer(2, 3)
    5

negative int, positive int:
    >>> add_integer(-1, 3)
    2

string, positive int:
    >>> add_integer("Home", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

positive float, positive int:
    >>> add_integer(5.0, 3)
    8

negative float, positive float:
    >>> add_integer(-1.5, 3.0)
    2

positive float, string:
    >>> add_integer(2.0, "ALX")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

character, character:
    >>> add_integer('c', 'd')
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

positive int, list:
    >>> add_integer(10, [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
